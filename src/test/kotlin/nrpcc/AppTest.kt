/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package nrpcc
// see https://docs.corda.r3.com/tutorial-clientrpc-api.html
// https://github.com/corda/corda/blob/release/os/4.4/docs/source/example-code/
//   src/main/kotlin/net/corda/docs/kotlin/ClientRpcTutorial.kt
//   build.gradle
//  add deps: node-driver, test-utils

import net.corda.core.messaging.CordaRPCOps
/*
import net.corda.node.services.Permissions.Companion.invokeRpc
import net.corda.node.services.Permissions.Companion.startFlow
import net.corda.testing.core.ALICE_NAME
import net.corda.testing.driver.DriverParameters
import net.corda.testing.node.User
import net.corda.testing.driver.driver
import net.corda.testing.node.internal.FINANCE_CORDAPPS
 */
import kotlin.test.Test
import kotlin.test.assertNotNull

class AppTest {
    @Test fun testAppHasMemberX() {
        val u = "user"
        val p = "password"
/*      val classUnderTest = RpcCmdr()
        val user = User(u, p, permissions = setOf(startFlow<CashIssueFlow>(),
            startFlow<CashPaymentFlow>(),
            startFlow<CashExitFlow>(),
            invokeRpc(CordaRPCOps::nodeInfo)
        ))
        val baseDirectory = Paths.get("build/rpc-api-tutorial")
        driver(DriverParameters(driverDirectory = baseDirectory,
                cordappsForAllNodes = FINANCE_CORDAPPS,
                waitForAllNodesToFinish = true)) {
            val node = startNode(providedName = ALICE_NAME, rpcUsers = listOf(user)).get()
        }
        assertNotNull(classUnderTest.memberX, "app should have memberX")
*/  }
}
